// generated from rosidl_adapter/resource/srv.idl.em
// with input from interbotix_xs_msgs/srv/RobotInfo.srv
// generated code does not contain a copyright notice


module interbotix_xs_msgs {
  module srv {
    @verbatim (language="comment", text=
      " Get robot information" "\n"
      "" "\n"
      " Note that if a 'gripper' joint is specified, all information will be specified in terms of the 'left_finger' joint")
    struct RobotInfo_Request {
      @verbatim (language="comment", text=
        " set to 'group' if requesting info about a joint group or 'single' if requesting info about a single joint")
      string cmd_type;

      @verbatim (language="comment", text=
        " the group name if requesting info about a group or the joint name if requesting info about a single joint")
      string name;
    };
    struct RobotInfo_Response {
      @verbatim (language="comment", text=
        " the operating mode for the specified joint group or joint")
      string mode;

      @verbatim (language="comment", text=
        " the profile type for the specified joint group or joint")
      string profile_type;

      @verbatim (language="comment", text=
        " the name of each joint in a group or just the specified joint")
      sequence<string> joint_names;

      @verbatim (language="comment", text=
        " the Dynamixel ID for each joint in a group or for the specified joint")
      sequence<int16> joint_ids;

      @verbatim (language="comment", text=
        " the lower limit for each joint in a group or for the specified joint (taken from URDF)")
      @unit (value="radians")
      sequence<float> joint_lower_limits;

      @verbatim (language="comment", text=
        " the upper limit for each joint in a group or for the specified joint (taken from URDF)")
      @unit (value="radians")
      sequence<float> joint_upper_limits;

      @verbatim (language="comment", text=
        " the velocity limit for each joint in a group or for the specified joint (taken from URDF)")
      @unit (value="rad/s")
      sequence<float> joint_velocity_limits;

      @verbatim (language="comment", text=
        " the sleep position for each joint in a group or for the specified joint")
      @unit (value="rad")
      sequence<float> joint_sleep_positions;

      @verbatim (language="comment", text=
        " index for each joint in a group or for the specified joint in the published JointState message")
      sequence<int16> joint_state_indices;

      @verbatim (language="comment", text=
        " the number of joints in a group or 1")
      int16 num_joints;

      @verbatim (language="comment", text=
        " the name of the group or joint requested; if group was 'all', returns the names of all groups")
      sequence<string> name;
    };
  };
};
