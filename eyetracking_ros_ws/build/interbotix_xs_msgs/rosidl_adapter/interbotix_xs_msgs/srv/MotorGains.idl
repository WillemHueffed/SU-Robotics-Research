// generated from rosidl_adapter/resource/srv.idl.em
// with input from interbotix_xs_msgs/srv/MotorGains.srv
// generated code does not contain a copyright notice


module interbotix_xs_msgs {
  module srv {
    @verbatim (language="comment", text=
      " Set PID gains" "\n"
      "" "\n"
      " To get familiar with the various PID gains, go to..." "\n"
      " http://emanual.robotis.com/docs/en/software/dynamixel/dynamixel_workbench/" "\n"
      " ...click on a motor model, and scroll down to the 'PID' section.")
    struct MotorGains_Request {
      @verbatim (language="comment", text=
        " set to 'group' if commanding a joint group or 'single' if commanding a single joint")
      string cmd_type;

      @verbatim (language="comment", text=
        " name of the group if commanding a joint group or joint if commanding a single joint")
      string name;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Position_P_Gain register")
      int32 kp_pos;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Position_I_Gain register")
      int32 ki_pos;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Position_D_Gain register")
      int32 kd_pos;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Feedforward_1st_Gain register")
      int32 k1;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Feedforward_2nd_Gain register")
      int32 k2;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Velocity_P_Gain register")
      int32 kp_vel;

      @verbatim (language="comment", text=
        " acts as a pass-through to the Velocity_I_Gain register")
      int32 ki_vel;
    };
    struct MotorGains_Response {
      uint8 structure_needs_at_least_one_member;
    };
  };
};
